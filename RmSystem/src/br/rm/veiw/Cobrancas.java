/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package br.rm.veiw;

import br.rm.controle.ColaboradorRenderer;
import br.rm.controle.FormatacaoMoeda;
import br.rm.controle.Repository;
import br.rm.controle.StatusEmprestimo;
import br.rm.controle.StatusParcela;
import br.rm.modelo.Rm_Colaborador;
import br.rm.modelo.Rm_Emprestimo;
import br.rm.modelo.Rm_Parcela;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.awt.image.ImageObserver.WIDTH;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;


/**
 *
 * @author DEV
 */
public class Cobrancas extends javax.swing.JInternalFrame {

    private List<Rm_Colaborador> colaboradores;
    private Rm_Colaborador colaborador;
    private StringBuilder clienteAtrasado;
    private FormatacaoMoeda format;

    public Cobrancas() {
        initComponents();

        jTdataInicial.setDate(new Date());
        jTdataFinal.setDate(new Date());
        format = new FormatacaoMoeda();
        buscarTodosColaborador();
        comboBoxColaborador.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                colaborador = (Rm_Colaborador) comboBoxColaborador.getSelectedItem();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTdataInicial = new com.toedter.calendar.JDateChooser();
        jTdataFinal = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        comboBoxColaborador = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jListar = new javax.swing.JButton();
        jSalvarPdf = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTAClientesACobrar = new javax.swing.JTextArea();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setClosable(true);
        setTitle("Cobranças");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTdataInicial.setBackground(new java.awt.Color(255, 255, 255));
        jTdataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTdataInicial.setForeground(new java.awt.Color(255, 255, 255));
        jTdataInicial.setDateFormatString("dd/MM/yyyy");
        jTdataInicial.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jTdataFinal.setBackground(new java.awt.Color(255, 255, 255));
        jTdataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTdataFinal.setForeground(new java.awt.Color(255, 255, 255));
        jTdataFinal.setToolTipText("Até");
        jTdataFinal.setDateFormatString("dd/MM/yyyy");
        jTdataFinal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Data final");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Data inicio");

        comboBoxColaborador.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        comboBoxColaborador.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Selecione o colaborador ");

        jListar.setBackground(new java.awt.Color(51, 51, 51));
        jListar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jListar.setForeground(new java.awt.Color(255, 255, 255));
        jListar.setText("Listar");
        jListar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jListar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jListar.setFocusPainted(false);
        jListar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jListarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jListarMouseExited(evt);
            }
        });
        jListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jListarActionPerformed(evt);
            }
        });

        jSalvarPdf.setBackground(new java.awt.Color(51, 51, 51));
        jSalvarPdf.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSalvarPdf.setForeground(new java.awt.Color(255, 255, 255));
        jSalvarPdf.setText("Salvar PDF");
        jSalvarPdf.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jSalvarPdf.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSalvarPdf.setFocusPainted(false);
        jSalvarPdf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jSalvarPdfMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jSalvarPdfMouseExited(evt);
            }
        });
        jSalvarPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSalvarPdfActionPerformed(evt);
            }
        });

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Lista de Cobranças", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jTAClientesACobrar.setEditable(false);
        jTAClientesACobrar.setColumns(20);
        jTAClientesACobrar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTAClientesACobrar.setRows(5);
        jTAClientesACobrar.setBorder(null);
        jScrollPane3.setViewportView(jTAClientesACobrar);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1037, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jTdataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jTdataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(comboBoxColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(jListar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(jSalvarPdf, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(0, 0, 0)
                            .addComponent(jTdataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(0, 0, 0)
                            .addComponent(jTdataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboBoxColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jListar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSalvarPdf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListarMouseEntered
        jListar.setBackground(new Color(153, 153, 0));
        jListar.setForeground(Color.WHITE);
    }//GEN-LAST:event_jListarMouseEntered

    private void jListarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListarMouseExited
        jListar.setBackground(new Color(51, 51, 51));
        jListar.setForeground(Color.WHITE);
    }//GEN-LAST:event_jListarMouseExited

    private void jListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jListarActionPerformed
        buscarCobrancas();
    }//GEN-LAST:event_jListarActionPerformed

    private void jSalvarPdfMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSalvarPdfMouseEntered
        jSalvarPdf.setBackground(new Color(153, 153, 0));
        jSalvarPdf.setForeground(Color.WHITE);
    }//GEN-LAST:event_jSalvarPdfMouseEntered

    private void jSalvarPdfMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSalvarPdfMouseExited
        jSalvarPdf.setBackground(new Color(51, 51, 51));
        jSalvarPdf.setForeground(Color.WHITE);
    }//GEN-LAST:event_jSalvarPdfMouseExited

    private void jSalvarPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSalvarPdfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSalvarPdfActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Rm_Colaborador> comboBoxColaborador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jListar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jSalvarPdf;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTAClientesACobrar;
    private com.toedter.calendar.JDateChooser jTdataFinal;
    private com.toedter.calendar.JDateChooser jTdataInicial;
    // End of variables declaration//GEN-END:variables

    private void buscarTodosColaborador() {
        colaboradores = Repository.getInstance().buscarTodosColaborador();
        DefaultComboBoxModel<Rm_Colaborador> tipoComboBox = new DefaultComboBoxModel<>();

        for (Rm_Colaborador c : colaboradores) {
            tipoComboBox.addElement(c);
        }

        comboBoxColaborador.setModel(tipoComboBox);
        comboBoxColaborador.setRenderer(new ColaboradorRenderer());

    }

    private void buscarCobrancas() {
        colaborador = (Rm_Colaborador) comboBoxColaborador.getSelectedItem();
        List<Rm_Emprestimo> emprestimosACobrar = new ArrayList<>();
        List<Rm_Parcela> parcelaACobrar = new ArrayList<>();

        if (verificaEmprestimoAberto()) {
            for (Rm_Emprestimo emprestimo : colaborador.getEmprestimos()) {
                if (emprestimo.getStatus().equals(StatusEmprestimo.ABERTO)) {
                    for (Rm_Parcela parcela : emprestimo.getParcela()) {
                        if (parcela.getStatus().equals(StatusParcela.ATRASADA)) {

                            if (!emprestimosACobrar.contains(emprestimo)) {
                                emprestimosACobrar.add(emprestimo);

                            }

                        } else if (parcela.getDataVencimento() == new Date()) {
                            if (!emprestimosACobrar.contains(emprestimo)) {
                                emprestimosACobrar.add(emprestimo);
                            }
                        }

                    }
                }
            }
            for (int i = 0; i < emprestimosACobrar.size(); i++) {
                if (emprestimosACobrar.get(i).getParcela().get(i).getDataVencimento().after(new Date()) || emprestimosACobrar.get(i).getParcela().get(i).getStatus().equals(StatusParcela.ABERTA)) {
                    emprestimosACobrar.get(i).getParcela().remove(i);
                    i--; // Decrementa o índice para compensar a remoção        
                }

            }
            if (!emprestimosACobrar.isEmpty()) {
                listar(emprestimosACobrar);
            }
        } else {
            JOptionPane.showMessageDialog(null, "NENHUMA COBRANÇA ENCONTRADA", "ALERTA", WIDTH);
            jTAClientesACobrar.setText("");
        }
    }

    private void listar(List<Rm_Emprestimo> emprestimos) {
        clienteAtrasado = new StringBuilder();
        for (Rm_Emprestimo emprestimo : emprestimos) {
            //clienteAtrasado.append("Tempo de atraso: ").append(cliente.getNome()).append("\n");
            clienteAtrasado.append("Nome: ").append(emprestimo.getCliente().getNome()).append("\n");
            clienteAtrasado.append("Telefone: ").append(emprestimo.getCliente().getTelefone()).append("\n");
            clienteAtrasado.append("Rua: ").append(emprestimo.getCliente().getRua()).append("  Num: ").append(emprestimo.getCliente().getNumero()).append("\n");
            clienteAtrasado.append("Bairro: ").append(emprestimo.getCliente().getBairro()).append("\n");
            clienteAtrasado.append("EMPRÉSTIMO: ").append(format.formatarMoeda(emprestimo.getValorEmprestimo())).append("   JUROS: ").append(format.formatarMoeda(emprestimo.getTaxaJuros())).append("   VALOR Á PAGAR: ").append(format.formatarMoeda(emprestimo.getValorTotalPagar())).append("\n");
            clienteAtrasado.append("Cobrador Responsavel: ").append(emprestimo.getColaborador().getNome()).append("\n");;
            clienteAtrasado.append("                         == PARCELAS == ").append("\n");
            clienteAtrasado.append("            =NÚMERO=                =VENCIMENTO=                =VALOR=             =JUROS DIÁRIO=             =STATUS=").append("\n");

            //ordenar a lista emprestimos.getParcela()
            emprestimo.getParcela().sort((parcela1, parcela2) -> Integer.compare(parcela1.getNumeroParcela(), parcela2.getNumeroParcela()));
            for (Rm_Parcela parcela : emprestimo.getParcela()) {
                clienteAtrasado.append("                  ").append(parcela.getNumeroParcela()).append("                            ").append(parcela.getDataFormatada()).append("                             ").append(format.formatarMoeda(parcela.getValor())).append("                   ").append(format.formatarMoeda(parcela.getValorJurosDiario())).append("                        ").append(parcela.getStatus()).append("  \n");
            }
            clienteAtrasado.append("________________________________________________________________________________________________________________________________________________\n");

        }
        jTAClientesACobrar.setText(clienteAtrasado.toString());

    }

    private boolean verificaEmprestimoAberto() {

        for (Rm_Emprestimo emprestimo : colaborador.getEmprestimos()) {
            if (emprestimo.getStatus().equals(StatusEmprestimo.ABERTO)) {
                return true;

            } 
        }
        return false;
    }

    
   
}
