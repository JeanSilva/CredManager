/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package br.rm.veiw;

import br.rm.controle.FormatacaoMoeda;
import br.rm.controle.Repository;
import static br.rm.controle.StatusParcela.ABERTA;
import static br.rm.controle.StatusParcela.ATRASADA;
import static br.rm.controle.StatusParcela.RECEBIDA;
import br.rm.modelo.Rm_Colaborador;
import br.rm.modelo.Rm_Emprestimo;
import br.rm.modelo.Rm_Parcela;
import java.awt.Color;
import static java.awt.image.ImageObserver.WIDTH;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author DEV
 */
public class Relatorios extends javax.swing.JInternalFrame {

    private List<Rm_Emprestimo> emprestimos;
    private List<Rm_Parcela> parcelasRebidas;
    private List<Rm_Parcela> parcelasAtrasadas;
    private List<Rm_Parcela> parcelasEmAberto;
    private List<Rm_Parcela> parcelasGeral;
    private FormatacaoMoeda format;
    double totalRecebida = 0d;
    double totalAtrasado = 0d;
    double totalAberto = 0d;
    double totalVendido = 0d;
    double somaParcela = 0d;
    double totalComissao = 0d;
    double totalFaturado = 0d;
    double totalLucro = 0d;
    double totalJurosRecebido = 0d;

    public Relatorios() {
        initComponents();
        parcelasAtrasadas = new ArrayList<>();
        parcelasEmAberto = new ArrayList<>();
        parcelasRebidas = new ArrayList<>();
        parcelasGeral = new ArrayList<>();
        format = new FormatacaoMoeda();
        setFrameIcon(new ImageIcon(getClass().getResource("/icons/report.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTdataInicial = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jTdataFinal = new com.toedter.calendar.JDateChooser();
        jListar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLEmprestado = new javax.swing.JLabel();
        jLRecebido = new javax.swing.JLabel();
        jLReceber = new javax.swing.JLabel();
        jLFaturado = new javax.swing.JLabel();
        jLComissao = new javax.swing.JLabel();
        jLLucro = new javax.swing.JLabel();
        jLJurosDiario = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Relatórios");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Data inicio");

        jTdataInicial.setBackground(new java.awt.Color(255, 255, 255));
        jTdataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTdataInicial.setForeground(new java.awt.Color(255, 255, 255));
        jTdataInicial.setDateFormatString("dd/MM/yyyy");
        jTdataInicial.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Data final");

        jTdataFinal.setBackground(new java.awt.Color(255, 255, 255));
        jTdataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTdataFinal.setForeground(new java.awt.Color(255, 255, 255));
        jTdataFinal.setToolTipText("Até");
        jTdataFinal.setDateFormatString("dd/MM/yyyy");
        jTdataFinal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jListar.setBackground(new java.awt.Color(51, 51, 51));
        jListar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jListar.setForeground(new java.awt.Color(255, 255, 255));
        jListar.setText("Listar");
        jListar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jListar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jListar.setFocusPainted(false);
        jListar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jListarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jListarMouseExited(evt);
            }
        });
        jListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jListarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Valores totais para o periodo selecionado", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jLEmprestado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLEmprestado.setText("    Emprestado:");
        jLEmprestado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLRecebido.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLRecebido.setText("    Recebido:");
        jLRecebido.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLReceber.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLReceber.setText("    À Receber (Dinheiro na Rua):");
        jLReceber.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLFaturado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLFaturado.setText("    Faturado:");
        jLFaturado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLComissao.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLComissao.setText("    Pago em Comissões:");
        jLComissao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLLucro.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLLucro.setText("    Lucro líquido:");
        jLLucro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLJurosDiario.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLJurosDiario.setText("    Juros Diário Recebido:");
        jLJurosDiario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLReceber, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addComponent(jLRecebido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLEmprestado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLJurosDiario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLFaturado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLComissao, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addComponent(jLLucro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLEmprestado)
                    .addComponent(jLFaturado))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLRecebido)
                    .addComponent(jLComissao))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLReceber)
                        .addGap(0, 0, 0)
                        .addComponent(jLJurosDiario))
                    .addComponent(jLLucro))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jTdataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTdataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(jListar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTdataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jListar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, 0)
                        .addComponent(jTdataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListarMouseEntered
        jListar.setBackground(new Color(153, 153, 0));
        jListar.setForeground(Color.WHITE);
    }//GEN-LAST:event_jListarMouseEntered

    private void jListarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListarMouseExited
        jListar.setBackground(new Color(51, 51, 51));
        jListar.setForeground(Color.WHITE);
    }//GEN-LAST:event_jListarMouseExited

    private void jListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jListarActionPerformed

        if ((jTdataInicial.getDate() != null) || (jTdataFinal.getDate() != null)) {
            buscarPorPeriodo(jTdataInicial.getDate(), jTdataFinal.getDate());

        } else {
            buscarTodosPeriodo();
        }
    }//GEN-LAST:event_jListarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLComissao;
    private javax.swing.JLabel jLEmprestado;
    private javax.swing.JLabel jLFaturado;
    private javax.swing.JLabel jLJurosDiario;
    private javax.swing.JLabel jLLucro;
    private javax.swing.JLabel jLReceber;
    private javax.swing.JLabel jLRecebido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jListar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private com.toedter.calendar.JDateChooser jTdataFinal;
    private com.toedter.calendar.JDateChooser jTdataInicial;
    // End of variables declaration//GEN-END:variables

    private void buscarPorPeriodo(Date dateInicial, Date dateFinal) {
        try {
            emprestimos = Repository.getInstance().buscarTodosEmprestimoPorData(dateInicial, dateFinal);

            if (emprestimos != null) {
                organizarParcelas();
                calcular();
            } else {
                JOptionPane.showMessageDialog(null, "NENHUMA VENDA REGISTRADA NESSE PERÍODO", "VENDA NÃO ENCONTRADA", WIDTH);

            }
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(Relatorios.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void buscarTodosPeriodo() {
        try {
            emprestimos = Repository.getInstance().buscarTodosEmprestimo();

            if (emprestimos != null) {

                organizarParcelas();
                calcular();
            } else {
                JOptionPane.showMessageDialog(null, "NENHUMA VENDA REGISTRADA NESSE PERÍODO", "VENDA NÃO ENCONTRADA", WIDTH);
                // limpar();
            }
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(Relatorios.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void organizarParcelas() {

        parcelasEmAberto.clear();
        parcelasAtrasadas.clear();
        parcelasRebidas.clear();
        parcelasGeral.clear();

        for (Rm_Emprestimo emprestimo : emprestimos) {
            parcelasGeral.addAll(emprestimo.getParcela());
        }

        for (Rm_Parcela p : parcelasGeral) {

            switch (p.getStatus()) {
                case ABERTA:
                    parcelasEmAberto.add(p);
                    break;
                case ATRASADA:
                    parcelasAtrasadas.add(p);
                    break;
                case RECEBIDA:
                    parcelasRebidas.add(p);
                    break;
                default:
                    break;
            }
        }

    }

    private void calcular() {
        calcularContratosVendidos();
        calcularTotalReceberERecebido();
        calculoComissao();
        calculoFaturado();
        calculoLucro();
    }

    private void calcularContratosVendidos() {
        totalVendido = 0d;
        for (Rm_Emprestimo emprestimo : emprestimos) {
            totalVendido += emprestimo.getValorEmprestimo();
        }
        jLEmprestado.setText("    Emprestado: " + format.formatarMoeda(totalVendido));
    }

    private void calcularTotalReceberERecebido() {
        totalRecebida = 0d;
        totalAtrasado = 0d;
        totalAberto = 0d;
        totalJurosRecebido = 0d;
        for (Rm_Parcela parcelaRecebida : parcelasRebidas) {
            totalRecebida += parcelaRecebida.getValorRecebido();
            totalJurosRecebido += parcelaRecebida.getValorJurosDiarioRecebido();
        }
        jLRecebido.setText("    Recebido: " + format.formatarMoeda(totalRecebida));
        jLJurosDiario.setText("   Juros Diário Recebido: " + format.formatarMoeda(totalJurosRecebido));

        for (Rm_Parcela parcelaAtraso : parcelasAtrasadas) {
            totalAtrasado += parcelaAtraso.getValor();
        }

        for (Rm_Parcela parcelaAberta : parcelasEmAberto) {
            totalAberto += parcelaAberta.getValor();
        }
        jLReceber.setText("    À Receber (Dinheiro na Rua): " + format.formatarMoeda(totalAberto + totalAtrasado));

    }

    private void calculoComissao() {
        somaParcela = 0d;
        totalComissao = 0d;

        //CALCULAR comissao a receber das parcela ja pagas
        for (Rm_Emprestimo emp : emprestimos) {
            if (emp.getColaborador().getPorcentagemComissao() > 0) {
                for (Rm_Parcela p : emp.getParcela()) {
                    if (Objects.equals(emp.getId(), p.getEmprestimo().getId())) {
                        somaParcela += p.getValor();
                    }

                }
                totalComissao += somaParcela * (emp.getColaborador().getPorcentagemComissao() / 100);
                somaParcela = 0d;
            }
        }

        jLComissao.setText("    Pago em Comissões: " + format.formatarMoeda(totalComissao));

    }

    private void calculoFaturado() {
        totalFaturado = 0d;

        totalFaturado = totalRecebida + totalAberto + totalAtrasado+totalJurosRecebido;

        jLFaturado.setText("    Faturado: " + format.formatarMoeda(totalFaturado));
    }

    private void calculoLucro() {
        totalLucro = 0d;

        totalLucro = totalFaturado - totalVendido - totalComissao + totalJurosRecebido;

        jLLucro.setText("    Lucro líquido: " + format.formatarMoeda(totalLucro));
    }
}
