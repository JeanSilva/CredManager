/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.rm.veiw;

import br.rm.controle.Repository;
import br.rm.controle.StatusParcela;
import br.rm.modelo.Rm_Cliente;
import br.rm.modelo.Rm_Colaborador;
import br.rm.modelo.Rm_Emprestimo;
import br.rm.modelo.Rm_Parcela;
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.Color;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Toolkit;
import java.nio.file.Paths;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Jean
 */
public class Inicio extends javax.swing.JFrame {

 
    private Rm_Colaborador colaborador;
    private Rm_Cliente cliente;
    private List<Rm_Cliente> clientesAtraso;
    private String modoMenu;
    private List<Rm_Parcela> parcelas;
    JInternalFrame alerta = new AlertaAtrasos();

    public Inicio() {

        initComponents();
        clientesAtraso = new ArrayList<>();
        jLPrincipal.setBackground(new Color(51, 51, 51));
        setExtendedState(MAXIMIZED_BOTH);
        this.modoMenu = "INICIAL";
        setIcones();
        setVisible(true);
        atualizaParcelaAtrazo();
        buscarClientesAtraso();
        

    }

    public Inicio(Rm_Colaborador colaborador) {
        this.colaborador = colaborador;
        initComponents();
        clientesAtraso = new ArrayList<>();
        jLPrincipal.setBackground(new Color(51, 51, 51));
        setExtendedState(MAXIMIZED_BOTH);
       vefiricaPermissoes();
        setIcones();
        setVisible(true);
        setTitle("CredManger- " + this.colaborador.getNome());
        atualizaParcelaAtrazo();
        buscarClientesAtraso();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jDesktopPane = new javax.swing.JDesktopPane();
        jLPrincipal = new javax.swing.JLabel();
        jMenuPrincipal = new javax.swing.JMenuBar();
        jMenuCadastroCliente = new javax.swing.JMenu();
        jMenuCobradores = new javax.swing.JMenu();
        jMenuItemCadastroCobrador = new javax.swing.JMenuItem();
        jMenuItemCobrancas = new javax.swing.JMenuItem();
        jMenuEmprestimo = new javax.swing.JMenu();
        jMenuNovoEmprestimo = new javax.swing.JMenuItem();
        jMenuItemReceber = new javax.swing.JMenuItem();
        jMenuItemBuscar = new javax.swing.JMenuItem();
        jMenuRelatorio = new javax.swing.JMenu();
        jMenuItemRelatorio = new javax.swing.JMenuItem();
        jMenuItemGanho = new javax.swing.JMenuItem();
        jMenuConfig = new javax.swing.JMenu();
        jMenuNotificacao = new javax.swing.JMenu();
        jMenuLogout = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jDesktopPane.setBackground(new java.awt.Color(51, 51, 51));
        jDesktopPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jDesktopPane.setForeground(new java.awt.Color(51, 51, 51));
        jDesktopPane.setToolTipText("");

        jLPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        jLPrincipal.setForeground(new java.awt.Color(255, 255, 255));
        jLPrincipal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLPrincipal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/rm/icons/RM.png"))); // NOI18N
        jLPrincipal.setOpaque(true);

        jDesktopPane.setLayer(jLPrincipal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPaneLayout = new javax.swing.GroupLayout(jDesktopPane);
        jDesktopPane.setLayout(jDesktopPaneLayout);
        jDesktopPaneLayout.setHorizontalGroup(
            jDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPaneLayout.createSequentialGroup()
                .addComponent(jLPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 1112, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jDesktopPaneLayout.setVerticalGroup(
            jDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPaneLayout.createSequentialGroup()
                .addComponent(jLPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jMenuPrincipal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuPrincipal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jMenuCadastroCliente.setText("Cadastrar Cliente");
        jMenuCadastroCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuCadastroClienteMouseClicked(evt);
            }
        });
        jMenuPrincipal.add(jMenuCadastroCliente);

        jMenuCobradores.setText("Cobradores");

        jMenuItemCadastroCobrador.setText("Cadastrar / Editar");
        jMenuItemCadastroCobrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCadastroCobradorActionPerformed(evt);
            }
        });
        jMenuCobradores.add(jMenuItemCadastroCobrador);

        jMenuItemCobrancas.setText("Cobranças");
        jMenuItemCobrancas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCobrancasActionPerformed(evt);
            }
        });
        jMenuCobradores.add(jMenuItemCobrancas);

        jMenuPrincipal.add(jMenuCobradores);

        jMenuEmprestimo.setText("Empréstimos");

        jMenuNovoEmprestimo.setText("Novo Empréstimo");
        jMenuNovoEmprestimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNovoEmprestimoActionPerformed(evt);
            }
        });
        jMenuEmprestimo.add(jMenuNovoEmprestimo);

        jMenuItemReceber.setText("Receber Parcelas");
        jMenuItemReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemReceberActionPerformed(evt);
            }
        });
        jMenuEmprestimo.add(jMenuItemReceber);

        jMenuItemBuscar.setText("Buscar Empréstimo");
        jMenuItemBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBuscarActionPerformed(evt);
            }
        });
        jMenuEmprestimo.add(jMenuItemBuscar);

        jMenuPrincipal.add(jMenuEmprestimo);

        jMenuRelatorio.setText("Relátorios");

        jMenuItemRelatorio.setText("Geral");
        jMenuItemRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRelatorioActionPerformed(evt);
            }
        });
        jMenuRelatorio.add(jMenuItemRelatorio);

        jMenuItemGanho.setText("Ganhos de Cobrador");
        jMenuItemGanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGanhoActionPerformed(evt);
            }
        });
        jMenuRelatorio.add(jMenuItemGanho);

        jMenuPrincipal.add(jMenuRelatorio);

        jMenuConfig.setText("Configurações");
        jMenuConfig.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuConfigMouseClicked(evt);
            }
        });
        jMenuPrincipal.add(jMenuConfig);

        jMenuNotificacao.setText("Notificações de Atrasos");
        jMenuNotificacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuNotificacaoMouseClicked(evt);
            }
        });
        jMenuPrincipal.add(jMenuNotificacao);

        jMenuLogout.setText("Sair");
        jMenuLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuLogoutMouseClicked(evt);
            }
        });
        jMenuPrincipal.add(jMenuLogout);

        setJMenuBar(jMenuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemCobrancasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCobrancasActionPerformed
        fecharAbas();
        JInternalFrame cobraca = new Cobrancas();
        jDesktopPane.add(cobraca);
        cobraca.setVisible(true);
    }//GEN-LAST:event_jMenuItemCobrancasActionPerformed

    private void jMenuCadastroClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuCadastroClienteMouseClicked
        fecharAbas();
      
        JInternalFrame cliente = new ClienteCadastro(colaborador);
        jDesktopPane.add(cliente);
        cliente.setVisible(true);
    }//GEN-LAST:event_jMenuCadastroClienteMouseClicked

    private void jMenuItemCadastroCobradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCadastroCobradorActionPerformed
        fecharAbas();
        JInternalFrame colaborador = new ColaboradorCadastro();
        jDesktopPane.add(colaborador);
        colaborador.setVisible(true);
    }//GEN-LAST:event_jMenuItemCadastroCobradorActionPerformed

    private void jMenuConfigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuConfigMouseClicked
        fecharAbas();
        JInternalFrame config = new ConfiguracoesPermissao();
        jDesktopPane.add(config);
        config.setVisible(true);
    }//GEN-LAST:event_jMenuConfigMouseClicked

    private void jMenuLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuLogoutMouseClicked
        int resposta = JOptionPane.showConfirmDialog(null, "DESEJA REALMENTE SAIR ?", "Confirmação", JOptionPane.YES_NO_OPTION);

        switch (resposta) {
            // Ação a ser executada caso o usuário clique em "Sim"
            case JOptionPane.YES_OPTION:
                dispose();
                JFrame login = new Login();
                login.setVisible(true);
                break;
            // Ação a ser executada caso o usuário clique em "Não"
            case JOptionPane.NO_OPTION:
                return;

            // Ação a ser executada caso o usuário feche a caixa de diálogo sem escolher uma opção
            default:
                return;
        }
    }//GEN-LAST:event_jMenuLogoutMouseClicked

    private void jMenuNotificacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuNotificacaoMouseClicked
        buscarClientesAtraso();
    }//GEN-LAST:event_jMenuNotificacaoMouseClicked

    private void jMenuNovoEmprestimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNovoEmprestimoActionPerformed
        fecharAbas();
        JInternalFrame novoEmprestimo = new NovoEmprestimo();
        jDesktopPane.add(novoEmprestimo);
        novoEmprestimo.setVisible(true);
    }//GEN-LAST:event_jMenuNovoEmprestimoActionPerformed

    private void jMenuItemReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemReceberActionPerformed
        fecharAbas();
        JInternalFrame baixarParcela = new BaixarParcelaEmprestimo();
        jDesktopPane.add(baixarParcela);
        baixarParcela.setVisible(true);
    }//GEN-LAST:event_jMenuItemReceberActionPerformed

    private void jMenuItemBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBuscarActionPerformed
        fecharAbas();
        JInternalFrame buscaEmprestimo = new RecalcularEdiatarEmprestimo(colaborador);
        jDesktopPane.add(buscaEmprestimo);
        buscaEmprestimo.setVisible(true);
    }//GEN-LAST:event_jMenuItemBuscarActionPerformed

    private void jMenuItemRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRelatorioActionPerformed
        fecharAbas();
        JInternalFrame relatorio = new Relatorios();
        jDesktopPane.add(relatorio);
        relatorio.setVisible(true);
    }//GEN-LAST:event_jMenuItemRelatorioActionPerformed

    private void jMenuItemGanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGanhoActionPerformed
        fecharAbas();
        JInternalFrame ganhosColaborador = new RelatorioGanho(colaborador);
        jDesktopPane.add(ganhosColaborador);
        ganhosColaborador.setVisible(true);
    }//GEN-LAST:event_jMenuItemGanhoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */


        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */ try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (UnsupportedLookAndFeelException e) {
            e.printStackTrace();
        }

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JDesktopPane jDesktopPane;
    private javax.swing.JLabel jLPrincipal;
    private javax.swing.JMenu jMenuCadastroCliente;
    private javax.swing.JMenu jMenuCobradores;
    private javax.swing.JMenu jMenuConfig;
    private javax.swing.JMenu jMenuEmprestimo;
    private javax.swing.JMenuItem jMenuItemBuscar;
    private javax.swing.JMenuItem jMenuItemCadastroCobrador;
    private javax.swing.JMenuItem jMenuItemCobrancas;
    private javax.swing.JMenuItem jMenuItemGanho;
    private javax.swing.JMenuItem jMenuItemReceber;
    private javax.swing.JMenuItem jMenuItemRelatorio;
    private javax.swing.JMenu jMenuLogout;
    private javax.swing.JMenu jMenuNotificacao;
    private javax.swing.JMenuItem jMenuNovoEmprestimo;
    private javax.swing.JMenuBar jMenuPrincipal;
    private javax.swing.JMenu jMenuRelatorio;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    public static void adicionarInternalframe(JInternalFrame frame) {
        jDesktopPane.add(frame);
        frame.setVisible(true);
    }

    private void fecharAbas() {
        for (JInternalFrame frame : jDesktopPane.getAllFrames()) {
            frame.dispose(); // Fechar cada JInternalFrame
        }
    }

    private void setIcones() {
         this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icons/icone.png")));
        jMenuCadastroCliente.setIcon(new ImageIcon(getClass().getResource("/icons/usuario.png")));
        jMenuCobradores.setIcon(new ImageIcon(getClass().getResource("/icons/colaborador.png")));
        jMenuEmprestimo.setIcon(new ImageIcon(getClass().getResource("/icons/sack-dollar.png")));
        jMenuItemGanho.setIcon(new ImageIcon(getClass().getResource("/icons/coins.png")));
        jMenuItemCadastroCobrador.setIcon(new ImageIcon(getClass().getResource("/icons/colaborador.png")));
        jMenuItemCobrancas.setIcon(new ImageIcon(getClass().getResource("/icons/bank.png")));
        jMenuNovoEmprestimo.setIcon(new ImageIcon(getClass().getResource("/icons/add-document.png")));
        jMenuItemBuscar.setIcon(new ImageIcon(getClass().getResource("/icons/search-alt.png")));
        jMenuItemReceber.setIcon(new ImageIcon(getClass().getResource("/icons/stats.png")));
        jMenuRelatorio.setIcon(new ImageIcon(getClass().getResource("/icons/report.png")));
        jMenuNotificacao.setIcon(new ImageIcon(getClass().getResource("/icons/bell.png")));
        jMenuItemRelatorio.setIcon(new ImageIcon(getClass().getResource("/icons/report.png")));
        jMenuConfig.setIcon(new ImageIcon(getClass().getResource("/icons/config.png")));

        jMenuLogout.setIcon(new ImageIcon(getClass().getResource("/icons/power.png")));
    }

    private void atualizaParcelaAtrazo() {
        parcelas = Repository.getInstance().buscarParcelasAtrazadaAberto(StatusParcela.RECEBIDA);
        calcularMultaDiaria();

    }

    public void calcularMultaDiaria() {

        LocalDate dataAtual = LocalDate.now();
        List<Rm_Parcela> novaParcelas = new ArrayList<>();
        for (Rm_Parcela parcela : parcelas) {
            Date dataVencimento = parcela.getDataVencimento();
            LocalDate localDateVencimento = dataVencimento.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            if (localDateVencimento.isBefore(dataAtual)) {
                long diasAtraso = ChronoUnit.DAYS.between(localDateVencimento, dataAtual);

                parcela.setValorJurosDiario(diasAtraso * parcela.getTaxaJurosDiaria());
                parcela.setStatus(StatusParcela.ATRASADA);

            }
        }

        Repository.getInstance().atualizarParcela(parcelas);

    }

    private void buscarClientesAtraso() {
        clientesAtraso = new ArrayList<>();
        List<Rm_Emprestimo> emprestimosEmAtraso = new ArrayList<>();
        List<Rm_Parcela> parcelasAtrasadas = Repository.getInstance().buscarParcelasPorStatus(StatusParcela.ATRASADA);
        for (Rm_Parcela parcela : parcelasAtrasadas) {

            emprestimosEmAtraso.add(parcela.getEmprestimo());
        }

        for (Rm_Emprestimo emprestimo : emprestimosEmAtraso) {
            if (!clientesAtraso.contains(emprestimo.getCliente())) {
                clientesAtraso.add(emprestimo.getCliente());

            }

        }
        if (clientesAtraso.size() >= 100) {
            jMenuNotificacao.setText("99+ Notificações");
        } else {
            jMenuNotificacao.setText(clientesAtraso.size() + " Notificações");
        }
        if (!clientesAtraso.isEmpty()) {
            alerta.dispose();
            alerta = new AlertaAtrasos(clientesAtraso);
            jDesktopPane.add(alerta);
            alerta.setVisible(true);
        }
    }
    
    private void vefiricaPermissoes(){
                jMenuCadastroCliente.setVisible(colaborador.getPermissaoUsuario().isCadastro());
                jMenuItemCadastroCobrador.setVisible(colaborador.getPermissaoUsuario().isCadastro());
                jMenuNovoEmprestimo.setVisible(colaborador.getPermissaoUsuario().isNovoEmprestimo());
                jMenuItemReceber.setVisible(colaborador.getPermissaoUsuario().isBaixarEmprestimo());
                jMenuItemRelatorio.setVisible(colaborador.getPermissaoUsuario().isRelatorio());
                jMenuConfig.setVisible(colaborador.getPermissaoUsuario().isConfiguracoes());
    
    }   

}
